name: goreleaser

on:
  push:
    tags:
      - '*'

jobs:
  goreleaser:
    permissions:
      contents: write
    runs-on:
      - self-hosted-ghr
      - size-l-x64
    steps:
      -
        name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          fetch-depth: 0
      - name: Derive release suffix from tag (if it exists)
        run: |
          # Strip the 'refs/tags/' prefix
          TAG_NAME=${GITHUB_REF#refs/tags/}

          # Extract suffix from tag name after the last '-' (e.g., 'dencun' from 'v1.0.0-dencun')
          RELEASE_SUFFIX=${TAG_NAME##*-}

          # Check if the suffix is still a version pattern (e.g., 'v0.0.44'), in which case there's no suffix
          if [[ $RELEASE_SUFFIX =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            RELEASE_SUFFIX=""
          fi

          echo "RELEASE_SUFFIX=$RELEASE_SUFFIX" >> $GITHUB_ENV

          echo "Release suffix: $RELEASE_SUFFIX"
      - name: Set up Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version: '1.22'
      -
        name: Set up NodeJS
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v3.8.2
        with:
          node-version: 18
      - name: Run apt-get update
        run: sudo apt-get update
      - name: Install cross-compiler for linux/arm64
        run: sudo apt-get -y install gcc-aarch64-linux-gnu
      - name: Install make
        run: sudo apt-get -y install make
      - name: Set up QEMU
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0
      - name: Set up Docker Context for Buildx
        shell: bash
        id: buildx-context
        run: |
          docker context create builders
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2.10.0
        with:
          endpoint: builders
      -
        name: Login to DockerHub
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Update GoReleaser config
        run: |
          cp .goreleaser.yaml ../.goreleaser.yaml.new

          # If we have a RELEASE_SUFFIX, update the goreleaser config to not set
          # the release as the latest
          if [[ -n "$RELEASE_SUFFIX" ]]; then
            echo "release:" >> ../.goreleaser.yaml.new
            echo "  prerelease: true" >> ../.goreleaser.yaml.new
            echo "  make_latest: false" >> ../.goreleaser.yaml.new
          fi
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@5fdedb94abba051217030cc86d4523cf3f02243d # v4.6.0
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --config ../.goreleaser.yaml.new
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_SUFFIX: ${{ env.RELEASE_SUFFIX }}
